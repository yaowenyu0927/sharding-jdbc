
spring:
  shardingsphere:
    # 参数配置，显示 sql
    props:
      sql:
        show: true
    # 配置数据源
    datasource:
      # 给每个数据源取别名，下面的 ds1,ds2,ds3 任意取名字
      names: ds0,ds1
      # 给master-ds1 每个数据源配置数据库连接信息
      ds0:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://121.196.98.74:3306/order_test?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5
      # 配置 ds2-slave
      ds1:
        # 配置druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.98.135:3306/order_test?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: root
        password: 123456
        maxPoolSize: 100
        minPoolSize: 5

      # 配置默认数据源 ds1
    sharding:
      # 默认数据源，主要用于写，注意一定要配置读写分离，注意：如果不配置，那么就会把三个节点都当做slave节点，新增、修改、删除会出错
      default-data-source-name: ds1
      # 配置分表规则
      tables:
        # ksd_user 逻辑表名
        ksd_user:
          key-generator:
            # 主键列名
            column: id
            type: SNOWFLAKE
          # 数据节点：数据源$->{0..N}.逻辑表名$->{0..N}
          actual-data-nodes: ds$->{0..1}.ksd_user$->{0..1}
          # 拆分库策略，也就是什么样子的数据放到那个数据库中
          database-strategy:
            standard:
              # 分片键
              sharding-column: birthday
              preciseAlgorithmClassName: com.ausware.shardingjdbc.algorithm.BirthdayAlgorithm
          table-strategy:
            inline:
              # 分片键
              sharding-column: age
              #分片算法表达式
              algorithm-expression: ksd_user$->{age % 2}



  # 需求：我对用户表1000w数据，对用户表的数据进行分库分表操作，把年龄单数存在ksd_user1中，双数存在ksd_user0中
# 同时age单数存在ds1中，双数存在ds2中

